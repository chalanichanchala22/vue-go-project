basePath: /api
definitions:
  handler.AuthRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handler.CreateUserWithPasswordRequest:
    properties:
      address:
        example: 123 Main St, City
        type: string
      birthday:
        example: "1990-01-15"
        type: string
      confirmPassword:
        description: Only for validation
        type: string
      email:
        example: john.doe@example.com
        type: string
      gender:
        example: Male
        type: string
      name:
        example: John Doe
        type: string
      nic:
        example: 123456789V
        type: string
      password:
        type: string
    required:
    - address
    - birthday
    - email
    - gender
    - name
    - nic
    type: object
  handler.SetPasswordRequest:
    properties:
      confirmPassword:
        example: password123
        type: string
      email:
        example: john.doe@example.com
        type: string
      password:
        example: password123
        minLength: 6
        type: string
    required:
    - confirmPassword
    - email
    - password
    type: object
  handler.UpdatePasswordRequest:
    properties:
      confirmPassword:
        example: newpassword123
        type: string
      currentPassword:
        example: oldpassword123
        type: string
      newPassword:
        example: newpassword123
        minLength: 6
        type: string
    required:
    - confirmPassword
    - currentPassword
    - newPassword
    type: object
  model.PhoneNumber:
    properties:
      id:
        type: string
      number:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  model.User:
    properties:
      address:
        type: string
      birthday:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: string
      name:
        type: string
      nic:
        type: string
      phones:
        items:
          $ref: '#/definitions/model.PhoneNumber'
        type: array
      photo:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A simple user management API using Fiber and MongoDB.
  title: Go Fiber User API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Authentication
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user account with email, password, and confirm password
        validation
      parameters:
      - description: User creation data with password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateUserWithPasswordRequest'
      - description: User's full name
        example: '"John Doe"'
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: User's email address
        example: '"john.doe@example.com"'
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: National ID number
        example: '"123456789V"'
        in: body
        name: nic
        required: true
        schema:
          type: string
      - description: User's address
        example: '"123 Main St, City"'
        in: body
        name: address
        required: true
        schema:
          type: string
      - description: Birthday in YYYY-MM-DD format
        example: '"1990-01-15"'
        in: body
        name: birthday
        required: true
        schema:
          type: string
      - description: Gender (Male/Female)
        example: '"Male"'
        in: body
        name: gender
        required: true
        schema:
          type: string
      - description: Password (minimum 6 characters)
        example: '"password123"'
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Confirm password (must match password)
        example: '"password123"'
        in: body
        name: confirmPassword
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Invalid request or validation errors
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user with password
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Retrieve a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user by ID
      tags:
      - Users
    put:
      consumes:
      - multipart/form-data
      description: Update an existing user with optional photo upload (multipart/form-data)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User's full name
        in: formData
        name: name
        type: string
      - description: User's email address
        in: formData
        name: email
        type: string
      - description: National ID number
        in: formData
        name: nic
        type: string
      - description: User's address
        in: formData
        name: address
        type: string
      - description: Birthday in ISO format (e.g. 2006-01-02T15:04:05.000Z)
        in: formData
        name: birthday
        type: string
      - description: Gender (e.g. Male or Female)
        in: formData
        name: gender
        type: string
      - description: User's profile image (jpg/png)
        in: formData
        name: photo
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user
      tags:
      - Users
  /users/{id}/password:
    put:
      consumes:
      - application/json
      description: Update a user's password with current password verification
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Password update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdatePasswordRequest'
      - description: Current password for verification
        example: '"oldpassword123"'
        in: body
        name: currentPassword
        required: true
        schema:
          type: string
      - description: New password (minimum 6 characters)
        example: '"newpassword123"'
        in: body
        name: newPassword
        required: true
        schema:
          type: string
      - description: Confirm new password (must match newPassword)
        example: '"newpassword123"'
        in: body
        name: confirmPassword
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request or validation errors
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Current password is incorrect
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user password
      tags:
      - Users
  /users/{id}/phones:
    get:
      consumes:
      - application/json
      description: Retrieve all phone numbers associated with a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PhoneNumber'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all phone numbers for a user
      tags:
      - Phones
    post:
      consumes:
      - application/json
      description: Add a new phone number to an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Phone number data
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/model.PhoneNumber'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.PhoneNumber'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new phone number for a user
      tags:
      - Phones
  /users/{id}/phones/{phoneId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific phone number for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Phone ID
        in: path
        name: phoneId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a phone number
      tags:
      - Phones
    put:
      consumes:
      - application/json
      description: Update an existing phone number for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Phone ID
        in: path
        name: phoneId
        required: true
        type: string
      - description: Updated phone data
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/model.PhoneNumber'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PhoneNumber'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a phone number
      tags:
      - Phones
  /users/{id}/with-phones:
    get:
      consumes:
      - application/json
      description: Retrieve a specific user with all their phone numbers
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user with phone numbers
      tags:
      - Users
  /users/set-password:
    post:
      consumes:
      - application/json
      description: Set password for users who don't have passwords (temporary migration
        endpoint)
      parameters:
      - description: Password data for existing user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password set successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request or validation errors
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Set password for existing user (Migration helper)
      tags:
      - Users
  /users/with-phones:
    get:
      consumes:
      - application/json
      description: Retrieve all users along with their associated phone numbers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users with their phone numbers
      tags:
      - Users
swagger: "2.0"
